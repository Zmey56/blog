---
toc: true
layout: post
comments: true
description: Ответы на первую часть Fast.ai Deep Learning 2020
categories: [markdown, fastai, Russian, Deep Learning]
title: Fastbook Chapter 1 questionnaire solutions
---
Продолжение - ответы на вторую часть на русском языке на [вопросы](https://forums.fast.ai/t/fastbook-chapter-1-questionnaire-solutions-wiki/65647)  курса Deep Learning 2020 на Fast.ai. Если есть притензии к переводу, то пешите в коментариях - поправлю.

**1. Приведите пример того, где модель классификации медведя может работать плохо из-за структурных или стилевых различий в обучающих данных?**

Существует много случаев, когда модель классификации медведя может работать плохо, особенно если рассматриваемые данные не были представлены в обучающем наборе:
* Медведь частично закрыт
* Фотографии в темное время суток
* Изображения с низким разрешением
* Медведь находится далеко от камеры
* В наборе данных обучения медведей присутствует смещение приоритетов в сторону некоторых характеристик (например, цвета)


**2. Где у языковых моделей в настоящее время имеются серьезные недостатки?**

Текстовые модели могут генерировать например ответы или сообщения в стиле различных авторов. Однако языковые модели все еще испытывают трудности с правильными ответами. В результате может быть сгенерирован достаточно правдободобный текст на основе фактической информации, но не соответствующий истине. Это может быть очень опасно, так как неподготовленый читатель может принять все за чистую монету, так как он не осценивает точность.

**3. Каковы возможные негативные социальные последствия из-за текстов, сгенерированных языковыми моделями?**

Так как языковые модели могут сгенерировать убедительные тексты, то они могут являться причинами маштабного распостранения фейковых новостей и способствовать конфликтам.

Модели усиливают предвзятость (например, на основании гендерных или расовых отличий) в обучающих данных и создают порочный цикл необъективных результатов.

**4. В ситуациях, когда модель может ошибаться, и эти ошибки могут нанести вред, что является хорошей альтернативой полной автоматизации процесса??**

Прогнозы модели контролируются экспертами-людьми, чтобы они могли оценить результаты и определить корректный следующим шагом. Данный элемент особенно актуален при применении машинного обучения для медицинских диагнозов. Например, использование модели машинного обучения для идентификации инсультов при компьютерной томографии выявляет высокоприоритетные случаи, которые требуют немедленного углубленного анализа.  Другие экземпляры уже рассматриваются врачами отдельно. 
 
**5. В каких табличных данных глубокое обучение особенно хорошо??**
 
Глубокое обучение хорошо подходит для анализа табличных данных, включающих естественный язык, или категориальных столбцов из большого множества (содержащих большее количество дискретных величин, таких как почтовый индекс).
 
**6. Какой ключевой недостаток использования модели глубокого обучения для рекомендательных систем?? 

Подходы машинного обучения для рекомендательных систем часто говорят только о том, какие продукты могут понравиться пользователю, и могут не являться полезными рекомендациями. Например, когда пользователю рекомендуется купить книги одного из авторов на основании того, что он купил одно его произведение, а при этом с остальными он уже знаком. Так же и с продуктами ему может рекомендоваться купить то, что у него уже есть.
 
**7. Какие этапы трансмиссионного (Drivetrain) подхода?**
 
![](/images/0312-1-drivetrain-approach-lg.png) 

**8. Как шаги трансмиссионного поодхода соотносятся с рекомендательной системой?**

Цель механизма рекомендаций состоит в том, чтобы стимулировать дополнительные продажи, стимулируя клиентов рекомендациями покупок, которые они не совершили в ином случае. Рычагом является ранжирование рекомендаций. Новые данные необходимо собрать для генерации рекомендаций, которые приведут к новым продажам . Для этого потребуется провести множество рандомизированных экспериментов, чтобы собрать данные о широком спектре рекомендаций для широкого круга клиентов. Это шаг, который делают немногие организации; но без этого у вас нет информации, необходимой для реальной оптимизации рекомендаций, основанных на вашей истинной цели (больше продаж!).

**9. Создайте модель распознавания образов, используя данные, которые вы хотите, и разверните ее в интернете.**

Выполняется самостоятельно по видео. Я просто повторил точь в точь, и получил распознование медведей.

**10. Что такое DataLoaders?**

Класс *DataLoaders*-это класс, который передает данные в модель *fastai*. По сути, это класс, который хранит необходимые объекты *Dataloader* (обычно для наборов *train* и *validation*) 
 























**7. Откройте блокнот и выполните ячейку, содержащую: 1+1 . Что же произойдет?**
 
 В блокноте Jupyter мы можем создавать ячейки кода и запускать код в интерактивном режиме. Когда мы выполняем ячейку, содержащую некоторый код (в данном случае: 1+1), код запускает Python, а выходные данные отображаются под ячейкой кода (в данном случае: 2).
 
**8. Проследите за каждой ячейкой урезанной версии записной книжки для этой главы. Прежде чем выполнить каждую ячейку, угадайте, что произойдет.**
 
 Это необходимо сделать самому.
 
**9. Заполните онлайн-приложение Jupyter Notebook.**
 
 Это необходимо сделать самому.
 
**10. Почему трудно использовать традиционные компьютерные программы для распознавания изображений на фотографии?**
 
 Для нас, людей, легко идентифицировать изображения на фотографиях, например, идентифицировать кошек и собак. Это происходит потому, что подсознательно наш мозг узнал, какие черты определяют кошку или собаку. Но трудно определить набор правил для компьютерной программы, которая так же сможет делать это успешно. Можете ли вы придумать универсальное правило, чтобы определить, содержит ли фотография кошку или собаку? Как бы вы закодировали это в виде компьютерной программы? Это очень трудно, потому что кошки, собаки или другие объекты имеют большое разнообразие форм, текстур, цветов и других особенностей, и это почти невозможно вручную закодировать в компьютерной программе.
 
**11. Что Сэмюэль имел в виду под “распределением веса” (Weight Assignment)?**
 
 “распределением веса” относится к текущим значениям параметров модели. Артур Сэмюэл далее упоминает "автоматическое средство проверки эффективности любого текущего распределение веса" и "механизм изменения значения веса таким образом, чтобы максимизировать производительность". Это относится к оценке и обучению модели с целью получения набора значений параметров, которые максимизируют производительность модели.
 
**12. Какой термин мы обычно используем в глубоком обучении для тог, что Сэмюэл назвал “Весами”?**
 
 Вместо этого мы используем термин параметры. В глубоком обучении термин “вес” имеет другое значение. (Нейронная сеть имеет различные параметры, к которым мы подгоняем наши данные. Как показано в следующих главах, существуют два типа параметров нейронной сети - веса и смещение).
 
**13. Нарисуйте картинку, которая обобщает взгляд Артура Сэмюэля на модель машинного обучения.**
 
 ![](/images/ML-model.PNG) 
 
**14. Почему трудно принять, что модель глубокого обучения делает определенный прогноз?**
 
 Это хорошо изученная тема, известная как интерпретируемость моделей глубокого обучения. Модели глубокого обучения трудно понять отчасти из-за их “глубокой” природы. Представьте себе модель линейной регрессии. Просто у нас есть некоторые входные переменные/данные, которые умножаются на некоторые веса, давая нам на выход полученное значение. Мы можем понять, какие переменные более важны, а какие менее важны, основываясь на их весах. Аналогичная логика может применяться и для небольшой нейронной сети с 1-3 слоями. Однако глубокие нейронные сети имеют сотни, если не тысячи слоев. Трудно определить, какие факторы играют важную роль в определении конечного результата. Нейроны в сети взаимодействуют друг с другом, причем выходы из одних нейронов поступают в другие нейроны. В целом, из-за сложной природы моделей глубокого обучения очень трудно понять, почему нейронная сеть делает тот или иной прогноз.
 
**15. Как называется теорема о том, что нейронная сеть может решить любую математическую задачу с любой точностью?**
 
 Универсальная  теорема аппроксимации утверждает, что нейронные сети теоретически могут решать любую математическую функцию. Однако важно понимать, что практически, в силу ограниченности имеющихся данных и компьютерного оборудования, обучить любую модель практически невозможно. Но мы можем подойти к решению очень близко!

**16.  Что вам нужно для того, чтобы обучить модель?**

Вам понадобится архитектура для задачи. Вам понадобятся данные для ввода в вашу модель. Для большинства случаев использования глубокого обучения вам понадобятся метки для ваших данных, чтобы сравнить предсказания вашей  модели. Вам понадобится функция потерь, которая будет количественно измерять производительность вашей модели. И вам нужен способ обновить параметры модели, чтобы улучшить ее производительность (это называется оптимизация).

**17. Как цикл обратной связи может повлиять на внедрение прогностической полициской модели?**

В прогностической полицейской модели мы могли бы получить положительную обратную связь, что привело бы к очень предвзятой модели с небольшой прогностической силой. Например, нам может понадобиться модель, которая предсказывала бы преступления, но мы используем информацию об арестах в качестве данных . Однако сами эти данные несколько искажены из-за предвзятости существующих полицейских процессов контроля. Обучение с этими данными приводит к необъективной модели. Правоохранительные органы могли бы использовать эту модель для определения того, где сосредоточить полицейскую деятельность, увеличивая число арестов в этих районах. Эти дополнительные аресты будут использоваться при обучении будущих итераций моделей, что приведет к еще более предвзятой модели. Этот цикл продолжается как положительная обратная связь.

**18. Всегда ли мы должны использовать изображения размером 224х224 пикселя в модели распознавания кошек?**

Нет, мы этого не должны делаем. 224x224 обычно используется по историческим причинам. Вы можете увеличить размер и получить лучшую производительность, но заплатить скоростью и памятью.

**19. В чем разница между классификацией и регрессией?**

Классификация ориентирована на предсказание класса или категории (например, типа домашнего животного). Регрессия ориентирована на предсказание числовой величины (например, возраста домашнего животного).

**20. Что такое проверочный набор (validation set)? Что такое тестовый набор(test set)? Зачем они нам нужны?**

Проверочный набор - это часть данных, которая используется не для обучения модели, а для оценки модели во время обучения, чтобы предотвратить переобучение. Он гарантирует, что производительность модели не является результатом “мошейничиства” или запоминания набора данных, а скорее потому, что она изучает соответствующие возможности для прогнозирования. Однако вполне возможно, что мы также переобучаем проверочные данные. Это происходит потому, что разработчик модели также является частью процесса обучения, корректируя гиперпараметры и процедуры обучения в соответствии с значениями проверки. Поэтому для окончательной оценки модели используется другая неиспользованная часть набора данных-тестовый набор. Такое разбиение набора данных необходимо для обеспечения того, чтобы модель обобщалась на неиспользованных данных.

**21. Что сделает fastai, если вы не определите проверочный набор?**

fastai автоматически создаст проверочный набор данных. Он случайным образом возьмет 20% данных и назначит их в качестве проверочного набора ( valid_pct = 0.2 

**22. Можем ли мы всегда использовать случайную выборку для проверочного набора? Почему или почему нет?**

Хорошые проверочные и тестовые наборы должны быть репрезентативными для новых данных, которые модель будет использовать в будущем. Иногда это не так, если используется случайная выборка. Например, для данных временных рядов случайные выборки не имеют смысла. Вместо этого лучше определить различные периоды времени для тренировки, проверки и тестирования.

**23. Что такое переобучение? Приведите пример.**

Переобучение является наиболее сложной проблемой, когда речь заходит о тренировки моделей машинного обучения. Переобучение относится к той ситуации, когда модель слишком близко подходит к ограниченному набору данных, но плохо работает на неиспользованных данных. Это особенно важно, когда речь заходит о нейронных сетях, потому что нейронные сети потенциально могут “запоминать” набор данных, на котором была обучена модель, и будут плохо работать с незадействованными данными, потому что они не “запоминали” основные истинные значения для этих данных. Вот почему необходима логичная структура проверки путем разделения данных на обучающие, проверочные и тестовые.

**24. Что такое метрика? В чем отличие от “потерь” (loss)?**

Метрика - это функция, которая измеряет качество прогнозов модели с помощью набора валидации. Она похоже на потери, которая также является мерой производительности модели. Однако потери предназначены для алгоритма оптимизации (например, SGD) с целью эффективного обновления параметров модели, в то время как метрики являются интерпретируемым человеком показателями производительности. Иногда метрика также может быть хорошим выбором для потерь.

**25. Как могут помочь натренированные модели?**

Предварительно натренированные модели обученые для задач, которые могут быть весьма схожи с текущей задачей. Например, предварительно обученные модели распознавания изображений часто обучались на наборе данных ImageNet, который содержит 1000 классов, ориентированных на множество различных типов визуальных объектов. Предварительно обученные модели полезны, потому что они уже научились обрабатывать множество простых функций, таких как распознавание краев и цветов. Однако, поскольку модель была обучена для другой задачи, чем решаемая, эта модель не может использоваться как есть.

**26. Что такое “голова”(head) модели?**

При использовании предварительно обученной модели более поздние слои модели, которые были полезны для задачи, на которой первоначально обучалась модель, заменяются одним или несколькими новыми слоями с рандомизированными весами, подходящими по размеру для набора данных, с которым вы работаете. Эти новые слои называются “головой” модели.

**27. Какие особенности обнаруживаются в ранних слоях CNN и в более поздних слоях?**

Более ранние слои изучают простые объекты, такие как диагональные, горизонтальные и вертикальные ребра. Более поздние слои изучают более продвинутые объекты, такие как автомобильные колеса, лепестки цветов и даже очертания животных.

**28. Являются ли модели изображений полезными только для фотографий?**

- Нет! Модели изображений могут быть полезны для других типов изображений, таких как чертежи, медицинские данные и т. д.

Очень много информации можно представить в виде изображений. Например, звук может быть преобразован в спектрограмму, которая является визуальной интерпретацией звука. Временные ряды (например, финансовые данные) можно преобразовать в изображение, построив график. Более того, существуют различные преобразования, которые генерируют изображения из временных рядов и достигли хороших результатов для классификации временных рядов. Есть много других примеров, и, проявив творческий подход, вы можете сформулировать свою проблему как проблему классификации изображений и использовать предварительно подготовленные модели изображений для получения самых современных результатов!

**29. Что такое “архитектура”?**

Архитектура-это шаблон или структура модели. Она определяет математическую модель, которую мы пытаемся обучить.

**30. Что такое сегментация?**

По своей сути сегментация-это задача классификации по пикселям. Мы пытаемся предсказать метку для каждого отдельного пикселя изображения. В результате получаем шаблон части изображения соответствуют данной метке.

**31. Для чего используется y_range? Когда нам понадобится?**

y_range используется для ограничения прогнозируемых значений, когда наша задача сосредоточена на предсказании числового значения в заданном диапазоне (например, прогнозирование рейтингов фильмов в диапазоне 0,5-5).

**32. Что такое “гиперпараметры”?**

Обучающие модели требуют различных параметров, определяющих способ обучения модели. Например, нам нужно определить, как долго мы собираемся тренировать или скорость обучения (насколько быстро параметры модели могут изменяться). Такого рода параметры называются гиперпараметрами.

**33. Как лучше всего избежать неудач при использовании ИИ в организации?**

Ключевые моменты, которые следует учитывать при использовании ИИ в организации:

* Убедитесь, что обучающий, проверочный и тестовый набор правильно определены, чтобы соответствующим образом оценить модель.
* Попробуйте построить простую базовую модель, которую будущая модель должны превзойти. Или даже этой простой базовой модели может быть достаточно в некоторых случаях.

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
